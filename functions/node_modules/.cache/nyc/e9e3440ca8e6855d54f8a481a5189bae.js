var cov_1w6bassul1=function(){var path="/home/kaztoozs/Documents/Projects/CallDeskTest/functions/index.js",hash="b012c9c80a52c25289252a5fc4ecebe52ff530c0",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/home/kaztoozs/Documents/Projects/CallDeskTest/functions/index.js",statementMap:{"0":{start:{line:3,column:13},end:{line:3,column:28}},"1":{start:{line:4,column:18},end:{line:4,column:47}},"2":{start:{line:6,column:13},end:{line:6,column:41}},"3":{start:{line:7,column:18},end:{line:7,column:51}},"4":{start:{line:9,column:0},end:{line:70,column:3}},"5":{start:{line:11,column:18},end:{line:11,column:61}},"6":{start:{line:14,column:20},end:{line:14,column:22}},"7":{start:{line:15,column:2},end:{line:18,column:3}},"8":{start:{line:16,column:4},end:{line:16,column:55}},"9":{start:{line:27,column:4},end:{line:61,column:7}},"10":{start:{line:29,column:19},end:{line:30,column:72}},"11":{start:{line:34,column:6},end:{line:60,column:9}},"12":{start:{line:35,column:19},end:{line:35,column:21}},"13":{start:{line:36,column:8},end:{line:36,column:47}},"14":{start:{line:36,column:33},end:{line:36,column:43}},"15":{start:{line:37,column:8},end:{line:55,column:11}},"16":{start:{line:39,column:27},end:{line:39,column:43}},"17":{start:{line:40,column:27},end:{line:40,column:51}},"18":{start:{line:41,column:27},end:{line:41,column:51}},"19":{start:{line:42,column:29},end:{line:42,column:63}},"20":{start:{line:43,column:36},end:{line:43,column:67}},"21":{start:{line:46,column:25},end:{line:50,column:26}},"22":{start:{line:54,column:10},end:{line:54,column:26}},"23":{start:{line:56,column:8},end:{line:59,column:11}},"24":{start:{line:58,column:10},end:{line:58,column:19}},"25":{start:{line:65,column:2},end:{line:69,column:5}},"26":{start:{line:66,column:4},end:{line:66,column:42}},"27":{start:{line:68,column:4},end:{line:68,column:86}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:9,column:66},end:{line:9,column:67}},loc:{start:{line:9,column:80},end:{line:70,column:1}},line:9},"1":{name:"callWeatherApi",decl:{start:{line:26,column:11},end:{line:26,column:25}},loc:{start:{line:26,column:38},end:{line:62,column:3}},line:26},"2":{name:"(anonymous_2)",decl:{start:{line:27,column:23},end:{line:27,column:24}},loc:{start:{line:27,column:44},end:{line:61,column:5}},line:27},"3":{name:"(anonymous_3)",decl:{start:{line:34,column:31},end:{line:34,column:32}},loc:{start:{line:34,column:41},end:{line:60,column:7}},line:34},"4":{name:"(anonymous_4)",decl:{start:{line:36,column:24},end:{line:36,column:25}},loc:{start:{line:36,column:31},end:{line:36,column:45}},line:36},"5":{name:"(anonymous_5)",decl:{start:{line:37,column:23},end:{line:37,column:24}},loc:{start:{line:37,column:29},end:{line:55,column:9}},line:37},"6":{name:"(anonymous_6)",decl:{start:{line:56,column:25},end:{line:56,column:26}},loc:{start:{line:56,column:31},end:{line:59,column:9}},line:56},"7":{name:"(anonymous_7)",decl:{start:{line:65,column:44},end:{line:65,column:45}},loc:{start:{line:65,column:56},end:{line:67,column:3}},line:65},"8":{name:"(anonymous_8)",decl:{start:{line:67,column:11},end:{line:67,column:12}},loc:{start:{line:67,column:17},end:{line:69,column:3}},line:67}},branchMap:{"0":{loc:{start:{line:15,column:2},end:{line:18,column:3}},type:"if",locations:[{start:{line:15,column:2},end:{line:18,column:3}},{start:{line:15,column:2},end:{line:18,column:3}}],line:15}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{"0":[0,0]},_coverageSchema:"d34fc3e6b8297bcde183f5492bcb8fcb36775295"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();// @flow
const http=(cov_1w6bassul1.s[0]++,require('http'));const functions=(cov_1w6bassul1.s[1]++,require('firebase-functions'));const host=(cov_1w6bassul1.s[2]++,'api.worldweatheronline.com');const wwoApiKey=(cov_1w6bassul1.s[3]++,'96787bdca10e476b92b132115180209');cov_1w6bassul1.s[4]++;exports.dialogflowFirebaseFulfillment=functions.https.onRequest((req,res)=>{cov_1w6bassul1.f[0]++;// Get the city and date from the request
const geocity=(cov_1w6bassul1.s[5]++,req.body.queryResult.parameters['geo-city']);// city is a required param
// Get the date for the weather forecast (if present)
let desiredDate=(cov_1w6bassul1.s[6]++,'');cov_1w6bassul1.s[7]++;if(req.body.queryResult.parameters.date){cov_1w6bassul1.b[0][0]++;cov_1w6bassul1.s[8]++;desiredDate=req.body.queryResult.parameters.date;// console.log(`Date: ${date}`);
}else{cov_1w6bassul1.b[0][1]++;}/**
  * Calls the API for weather forecast
  * @param {string} city city we want the forecast for
  * @param {string} date date we want the forecast for
  * @returns {Promise} with weather output
  */function callWeatherApi(city,date){cov_1w6bassul1.f[1]++;cov_1w6bassul1.s[9]++;return new Promise((resolve,reject)=>{cov_1w6bassul1.f[2]++;// Create the path for the HTTP request to get the weather
const path=(cov_1w6bassul1.s[10]++,`${'/premium/v1/weather.ashx?format=json&num_of_days=1'+'&q='}${encodeURIComponent(city)}&key=${wwoApiKey}&date=${date}`);// console.log(`API Request: ${host}${path}`);
// Make the HTTP request to get the weather
cov_1w6bassul1.s[11]++;http.get({host,path},resp=>{cov_1w6bassul1.f[3]++;let body=(cov_1w6bassul1.s[12]++,'');// var to store the response chunks
cov_1w6bassul1.s[13]++;resp.on('data',d=>{cov_1w6bassul1.f[4]++;cov_1w6bassul1.s[14]++;body+=d;});// store each response chunk
cov_1w6bassul1.s[15]++;resp.on('end',()=>{cov_1w6bassul1.f[5]++;// After all the data has been received parse the JSON for desired data
const response=(cov_1w6bassul1.s[16]++,JSON.parse(body));const forecast=(cov_1w6bassul1.s[17]++,response.data.weather[0]);const location=(cov_1w6bassul1.s[18]++,response.data.request[0]);const conditions=(cov_1w6bassul1.s[19]++,response.data.current_condition[0]);const currentConditions=(cov_1w6bassul1.s[20]++,conditions.weatherDesc[0].value);// Create response
const output=(cov_1w6bassul1.s[21]++,`Current conditions in the ${location.type}
        ${location.query} are ${currentConditions} with a projected high of
        ${forecast.maxtempC}째C or ${forecast.maxtempF}째F and a low of
        ${forecast.mintempC}째C or ${forecast.mintempF}째F on
        ${forecast.date}.`);// Resolve the promise with the output text
// console.log(output);
cov_1w6bassul1.s[22]++;resolve(output);});cov_1w6bassul1.s[23]++;resp.on('error',()=>{cov_1w6bassul1.f[6]++;cov_1w6bassul1.s[24]++;// console.log(`Error calling the weather API: ${error}`);
reject();});});});}// Call the weather API
cov_1w6bassul1.s[25]++;callWeatherApi(geocity,desiredDate).then(output=>{cov_1w6bassul1.f[7]++;cov_1w6bassul1.s[26]++;res.json({fulfillmentText:output});// Return the results of the weather API to Dialogflow
}).catch(()=>{cov_1w6bassul1.f[8]++;cov_1w6bassul1.s[27]++;res.json({fulfillmentText:'I don\'t know the weather but I hope it\'s good!'});});});